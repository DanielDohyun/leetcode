Given a text file file.txt that contains a list of phone numbers (one per line), write a one-liner bash script to print all valid phone numbers.

You may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)

You may also assume each line in the text file must not contain leading or trailing white spaces.

Example:

Assume that file.txt has the following content:

987-123-4567
123 456 7890
(123) 456-7890
Your script should output the following valid phone numbers:

987-123-4567
(123) 456-7890

# Read from the file file.txt and output all valid phone numbers to stdout.

grep -E "^(\([0-9]{3}\)\s|[0-9]{3}-)[0-9]{3}-[0-9]{4}$" ./file.txt

grep command with the -E option to perform a regular expression search in the file file.txt. 

^: Asserts the beginning of the line.
(\([0-9]{3}\)\s|[0-9]{3}-): This part of the pattern matches either of the two formats for the area code:
\([0-9]{3}\)\s: Matches an area code enclosed in parentheses, followed by a space.
[0-9]{3}-: Matches an area code followed by a hyphen.
[0-9]{3}-[0-9]{4}: This part matches the main phone number, which consists of three digits followed by a hyphen, and then four more digits.
$: Asserts the end of the line.
